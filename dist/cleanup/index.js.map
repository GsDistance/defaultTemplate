{"version":3,"file":"index.js","mappings":";;;;;;;AAAA;;;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["../webpack://gsd-versioner/external node-commonjs \"child_process\"","../webpack://gsd-versioner/external node-commonjs \"util\"","../webpack://gsd-versioner/webpack/bootstrap","../webpack://gsd-versioner/webpack/runtime/compat","../webpack://gsd-versioner/./src/cleanup.js"],"sourcesContent":["module.exports = require(\"child_process\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","const { exec } = require('child_process');\r\nconst util = require('util');\r\nconst execP = util.promisify(exec);\r\n\r\nasync function run() {\r\n  try {\r\n    // Ensure all LFS files are properly tracked and committed\r\n    console.log('Finalizing Git LFS operations...');\r\n    \r\n    // Add any remaining LFS files\r\n    await execP('git add .gitattributes');\r\n    await execP('git add .');\r\n    \r\n    // Try to commit any remaining changes\r\n    try {\r\n      await execP('git commit -m \"Update Git LFS tracked files\"');\r\n    } catch (error) {\r\n      // No changes to commit is fine\r\n      if (!error.message.includes('nothing to commit')) {\r\n        console.warn('Error during cleanup:', error.message);\r\n      }\r\n    }\r\n    \r\n    console.log('Git LFS cleanup completed');\r\n  } catch (error) {\r\n    console.warn('Error during Git LFS cleanup:', error.message);\r\n    // Don't fail the action if cleanup fails\r\n  }\r\n}\r\n\r\nrun();\r\n"],"names":[],"sourceRoot":""}